enum notification_type {
  LIKE
  COMMENT
  RETWEET
  QUOTE
  FOLLOW
}

enum tweet_type {
  TWEET
  RETWEET
  QUOTE
}

enum verification_token_type {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}

table accounts {
  id text [pk, not null]
  email text [not null, unique]
  email_verified boolean [default: false]
  password_hash text [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table follows {
  follower_id text [not null]
  following_id text [not null]
  created_at timestamp [default: `now()`]

  indexes {
    (follower_id, following_id) [pk]
    follower_id [name: 'follows_follower_idx']
    following_id [name: 'follows_following_idx']
  }
}

table notifications {
  id text [pk, not null]
  recipient_id text [not null]
  actor_id text [not null]
  type notification_type [not null]
  tweet_id text
  comment_id text
  is_read boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]

  indexes {
    recipient_id [name: 'notifications_recipient_idx']
    actor_id [name: 'notifications_actor_idx']
    type [name: 'notifications_type_idx']
    tweet_id [name: 'notifications_tweet_idx']
  }
}

table sessions {
  id text [pk, not null]
  account_id text [not null]
  user_id text [not null]
  refresh_token text [not null, unique]
  user_agent text
  ip_address text
  city text
  country text
  location point
  created_at timestamp [not null, default: `now()`]
  expires_at timestamp [not null]
}

table tweet_bookmarks {
  user_id text [not null]
  tweet_id text [not null]
  created_at timestamp [not null, default: `now()`]

  indexes {
    (user_id, tweet_id) [pk]
    user_id [name: 'tweet_bookmarks_user_idx']
    tweet_id [name: 'tweet_bookmarks_tweet_idx']
  }
}

table tweet_comments {
  id text [pk, not null]
  user_id text [not null]
  tweet_id text [not null]
  content varchar(150) [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    tweet_id [name: 'tweet_comments_tweet_idx']
    user_id [name: 'tweet_comments_user_idx']
  }
}

table tweet_likes {
  user_id text [not null]
  tweet_id text [not null]
  created_at timestamp [not null, default: `now()`]

  indexes {
    (user_id, tweet_id) [pk]
    user_id [name: 'tweet_likes_user_idx']
    tweet_id [name: 'tweet_likes_tweet_idx']
  }
}

table tweets {
  id text [pk, not null]
  user_id text [not null]
  content varchar(280)
  media_url text
  type tweet_type [not null, default: 'TWEET']
  original_tweet_id text
  like_count integer [not null, default: 0]
  retweet_count integer [not null, default: 0]
  quote_count integer [not null, default: 0]
  comment_count integer [not null, default: 0]
  bookmark_count integer [not null, default: 0]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    user_id [name: 'tweets_user_idx']
    type [name: 'tweets_type_idx']
    original_tweet_id [name: 'tweets_original_idx']
  }
}

table user_subscriptions {
  id text [pk, not null]
  user_id text [not null]
  stripe_customer_id text [not null]
  stripe_subscription_id text [not null]
  status varchar(20) [not null]
  current_period_start timestamp [not null]
  current_period_end timestamp [not null]
  cancel_at_period_end boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    user_id [name: 'user_subscriptions_user_idx']
    stripe_subscription_id [name: 'user_subscriptions_stripe_sub_idx']
  }
}

table users {
  id text [pk, not null]
  display_name varchar(50) [not null]
  user_name varchar(15) [not null, unique]
  avatar_url text [not null, default: 'https://ozzfzo6f4u.ufs.sh/f/4E4gJXn0fX5QxhdfWFjG1B5cSivUhkuwMOLA4yI3CmFbWTNE']
  bio varchar(100) [default: '']
  website varchar(100) [default: '']
  tweet_count integer [not null, default: 0]
  follower_count integer [not null, default: 0]
  following_count integer [not null, default: 0]
  account_id text [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (user_name, display_name) [name: 'users_search_index']
  }
}

table verification_tokens {
  id text [pk, not null]
  account_id text [not null]
  user_id text [not null]
  token text [not null]
  token_type verification_token_type [not null]
  created_at timestamp [not null, default: `now()`]
  expires_at timestamp [not null]
}

ref: users.account_id - accounts.id

ref: follows.follower_id > users.id

ref: follows.following_id > users.id

ref: notifications.recipient_id > users.id

ref: notifications.actor_id > users.id

ref: notifications.tweet_id > tweets.id

ref: notifications.comment_id > tweet_comments.id

ref: sessions.user_id > users.id

ref: sessions.account_id > accounts.id

ref: tweet_bookmarks.user_id > users.id

ref: tweet_bookmarks.tweet_id > tweets.id

ref: tweet_comments.user_id > users.id

ref: tweet_comments.tweet_id > tweets.id

ref: tweet_likes.user_id > users.id

ref: tweet_likes.tweet_id > tweets.id

ref: tweets.user_id > users.id

ref: tweets.original_tweet_id - tweets.id

ref: user_subscriptions.user_id - users.id

ref: verification_tokens.user_id > users.id

ref: verification_tokens.account_id > accounts.id